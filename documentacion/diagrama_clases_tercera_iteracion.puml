@startuml
title Tercera iteraci√≥n

class Prenda {
    TipoDePrenda : tipoDePrenda
    Material : material
    Trama : trama
    ColorPrimario : colorPrimario
    ColorSecundario : colorSecundario
}

enum TipoDePrenda {
    CAMISA,REMERA,
    CHOMBA,
    CAMISA_MANGA_CORTA,
    CAMISA_MANGA_LARGA,
    PANTALON,
    ZAPATOS,
    ZAPATILLAS
    categoria() : Categoria
}

enum Material {
  ALGODON,
  LANA,
  PIQUE,
  ACETATO,
  SEDA,
  CUERO
}

class Color {
    int : nivelRojo
    int : nivelVerde
    int : nivelAzul
}

enum Categoria {
  PARTE_SUPERIOR,
  PARTE_INFERIOR,
  CALZADO,
  ACCESORIO,
  CABEZA
}

enum Trama {
  LISA,
  RAYADA,
  CON_LUNARES,
  A_CUADROS,
  ESTAMPADO
}

abstract class MotorSugerencia {
    - getPrendasSuperiores(List<Prenda>) : Set<Prenda>
    - getPrendasInferiores(List<Prenda>) : Set<Prenda>
    - getCalzados(List<Prenda>) : Set<Prenda>
    + generarCombinacionesDeAtuendos(Usuario) : List<Atuendo>
    + sugerirAtuendo(Usuario) : Atuendo
    + {abstract} validarPrendasDe(Usuario) : List<Prenda>
}

class MotorSugerenciaBasico {
    + validarPrendasDe(Usuario) : List<Prenda>
}

class MotorSugerenciaSegunFormalidad{
    + validarPrendasDe(Usuario) : List<Prenda>
}

class Atuendo{
    Prenda : parteSuperior
    Prenda : parteInferior
    Prenda : calzado
}

enum Formalidad{
    FORMAL,
    INFORMAL,
    NEUTRA
}

Prenda o-- TipoDePrenda : agrega
Prenda o-- Color : agrega
Prenda o-- Material : agrega
Prenda o-- Trama : agrega
TipoDePrenda -up-> Categoria : usa

Atuendo o-- Prenda: agrega

Prenda - Formalidad : agrega

MotorSugerenciaBasico -up-|> MotorSugerencia
MotorSugerenciaSegunFormalidad -up-|> MotorSugerencia
MotorSugerencia -- "0..*" Atuendo : genera
MotorSugerencia -- Prenda: conoce

class Usuario {
    - prendas : List<Prenda>
    - edad : int
    - motorSugerencia : MotorSugerencia
    + Usuario(int, List<Prenda>, MotorSugerencia)
    + generarSugerencias() : List<Atuendo>
    + generarSugerencia() : Atuendo
    + getEdad() : int
    + getPrendas() : List<Prenda>
    + esEdadAvanzada() : boolean
    + getMotorSugerencia() : MotorSugerencia
    + setMotorSugerencia(MotorSugerencia) : void
}

Usuario -- "1" MotorSugerencia : usa
Usuario -- "1..*" Prenda : tiene
Usuario -- "0..*" Atuendo : genera

@enduml